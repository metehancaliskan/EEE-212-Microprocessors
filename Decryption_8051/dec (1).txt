ORG 0000H
MOV R4,#1BH
MOV R3,#0
MOV R1,#40H
MOV R0,#'K' 
MOV DPTR,#DECTEXT
MOV A,#02H  
MOVC A,@A+DPTR
SUBB A,R0   
SUBB A,#02H
MOV R2,A 
MOV A,#0
PUSH ACC
MOVC A,@A+DPTR
LOOP:
MOV B,A
SUBB A,R2 
CJNE A,#41H,OVER 
SJMP A_less 
OVER: JNC A_greater
SJMP A_less
A_greater: 
MOV A,B
SUBB A,R2
MOV @R1,A
ACALL SEND_DATA
ACALL CONFIGURE_LCD
POP ACC
INC A
PUSH ACC
MOVC A,@A+DPTR

INC R1
INC R2
CJNE A,#0,LOOP

LJMP FINISH
A_less: 
MOV A,R4
SUBB A,R2
MOV R3,A
MOV A,B
ADDC A,R3
MOV @R1,A
ACALL SEND_DATA
ACALL CONFIGURE_LCD
POP ACC
INC A
PUSH ACC
MOVC A,@A+DPTR
INC R2
INC R1

CJNE A,#0,LOOP

LJMP FINISH
FINISH:sjmp FINISH

CONFIGURE_LCD: ;THIS SUBROUTINE SENDS THE INITIALIZATION COMMANDS TO THE LCD
mov a,#38H ;TWO LINES, 5X7 MATRIX
acall SEND_COMMAND
mov a,#0FH ;DISPLAY ON, CURSOR BLINKING
acall SEND_COMMAND
mov a,#06H ;INCREMENT CURSOR (SHIFT CURSOR TO RIGHT)
acall SEND_COMMAND
ret


;P1.0-P1.7 ARE CONNECTED TO LCD DATA PINS D0-D7
;P3.5 IS CONNECTED TO RS
;P3.6 IS CONNECTED TO R/W
;P3.7 IS CONNECTED TO E

SEND_COMMAND: ;THIS  SUBROUTINE IS FOR SENDING THE COMMANDS TO LCD
mov p1,a ;THE COMMAND IS STORED IN A, SEND IT TO LCD
clr p3.5 ;RS=0 BEFORE SENDING COMMAND
clr p3.6 ;R/W=0 TO WRITE
setb p3.7 ;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
acall DELAY
clr p3.7
ret


SEND_DATA: ;THIS  SUBROUTINE IS FOR SENDING THE DATA TO BE DISPLAYED
mov p1,a ;SEND THE DATA STORED IN A TO LCD
setb p3.5 ;RS=1 BEFORE SENDING DATA
clr p3.6 ;R/W=0 TO WRITE
setb p3.7 ;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
acall DELAY
clr p3.7
ret


DELAY: ;A SHORT DELAY SUBROUTINE
push 0
push 1
mov r0,#2
DELAY_OUTER_LOOP:
mov r1,#2
djnz r1,$
djnz r0,DELAY_OUTER_LOOP
pop 1
pop 0
ret
	
ORG 0100H
DECTEXT: DB 'YKRAC',0
end

